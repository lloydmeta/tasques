// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaskResult task result
// swagger:model task.Result
type TaskResult struct {

	// When the Result was produced
	// Required: true
	// Format: date-time
	At *strfmt.DateTime `json:"at"`

	// Failure
	Failure interface{} `json:"failure,omitempty"`

	// Success
	Success interface{} `json:"success,omitempty"`
}

// Validate validates this task result
func (m *TaskResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskResult) validateAt(formats strfmt.Registry) error {

	if err := validate.Required("at", "body", m.At); err != nil {
		return err
	}

	if err := validate.FormatOf("at", "body", "date-time", m.At.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskResult) UnmarshalBinary(b []byte) error {
	var res TaskResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
